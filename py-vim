#!/bin/bash

USAGE='Usage: vim-py [-e virtual_env] [-p port] [vim_args]'

## VARIABLES
##############################

# Command-line arguments
while getopts ":he:o:p:" opt; do
  case $opt in
    h)
      echo $USAGE
      exit 0 ;;
    e)
      VENV=$OPTARG ;;
    p)
      PORT=$OPTARG ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2 ;;
  esac
done
shift $((OPTIND-1))

VIM_ARGS=$@

# File configurations

# Program defined variables
PORT=${VIMPY_PORT:-${PORT:-8080}}
VENV=${VENV:-.env-py}

## Use virtual environment if specified
if [ -f "$VENV/bin/ipython3" ] ; then
  IPYTHON=$VENV/bin/ipython3
elif [ -f "$HOME/.env-py/bin/ipython" ] ; then
  IPYTHON=~/.env-py/bin/ipython3
else
  echo 'ERROR: unable to find ipython3'
  exit 1
fi

## ASSERTIONS
##############################

## MAIN
##############################

START_SERVER="python3 -m http.server $PORT"
SESSION=$$

# if ! tmux ls > /dev/null 2>&1 ; then
if [ -z "$TMUX" ]; then

  ## 1) SERVER:  webserver to enable viewing output from browser
  tmux new-session -s $SESSION -n SERVER -d $START_SERVER

  ## 2) SHELL: bash shell to run commands
  tmux new-window -n SHELL

  ## 3) IDE: Python IDE using Vim and IPython
  tmux new-window -n IDE vim $VIM_ARGS
  tmux split-window -h $IPYTHON
  tmux last-pane

  ## Attach session to current client
  tmux -2 attach-session -t $SESSION
else

  ## IDE: Python IDE using Vim and IPython
  tmux new-window -n IDE vim $VIM_ARGS
  tmux split-window -h $IPYTHON
  tmux last-pane

fi
  

